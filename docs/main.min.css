/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}
@charset "UTF-8";
html {
  height: 100%;
}

body {
  height: 100%;
}

:root {
  font-size: 24px;
  font-weight: normal;
  font-variant-numeric: lining-nums;
  line-height: 1.4em;
  color: #fff;
  font-family: Raleway, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
@media screen and (max-width: 1024px) {
  :root {
    font-size: 21px;
  }
}
@media screen and (max-width: 768px) {
  :root {
    font-size: 3vmin;
  }
}

* {
  box-sizing: border-box;
}

button {
  cursor: pointer;
  outline: none;
  color: inherit;
  background: none;
  border: none;
}

body {
  background-color: #181213;
}

a {
  text-decoration: none;
  color: inherit;
}

.container {
  width: max(100vw - 5rem, 90%);
  max-height: 100vh;
  height: 100vh;
  margin: 0 auto;
}

.logo {
  width: -moz-fit-content;
  width: fit-content;
}

.support__list {
  display: flex;
  flex-direction: column;
  gap: 8px;
}
.support__link {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.6rem;
  text-decoration: underline;
}
.support__img {
  width: 16px;
  height: 16px;
}

.heading-one {
  font-family: Commissioner;
  font-weight: 500;
  font-size: 2.67rem;
  margin: 0;
}
.heading--tg {
  font-family: Raleway;
  color: #00A9DC;
  font-weight: 600;
}

.subtitle {
  font-family: Raleway;
  font-weight: 400;
  font-size: 1.3rem;
  line-height: 1.4rem;
}
.subtitle--increase {
  font-size: 1.7rem;
}
@media screen and (max-width: 768px) {
  .subtitle {
    text-align: center;
  }
}

.CTA {
  display: inline-block;
  padding: 0.7em 1.7em;
  background-color: #00A9DC;
  border-radius: 2.5rem;
  font-size: 1.3rem;
  font-weight: 600;
}
@media screen and (max-width: 768px) {
  .CTA {
    font-size: 1.7rem;
  }
}

.hamburger-stick__list {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
.hamburger-stick__item {
  display: inline-block;
  width: 3rem;
  height: 0.3rem;
  background-color: #F0F3F6;
}

@font-face {
  font-family: "Commissioner";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: local("Commissioner"), url("fonts/Commissioner-Medium.woff2") format("woff2"), url("fonts/Commissioner-Medium.woff") format("woff");
}
@font-face {
  font-family: "Commissioner";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Commissioner"), url("fonts/Commissioner-Regular.woff2") format("woff2"), url("fonts/Commissioner-Regular.woff") format("woff");
}
@font-face {
  font-family: "Raleway";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Raleway"), url("fonts/Raleway-Bold.woff2") format("woff2"), url("fonts/Raleway-Bold.woff") format("woff");
}
@font-face {
  font-family: "Raleway";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: local("Raleway"), url("fonts/Raleway-Medium.woff2") format("woff2"), url("fonts/Raleway-Medium.woff") format("woff");
}
@font-face {
  font-family: "Raleway";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Raleway"), url("fonts/Raleway-Regular.woff2") format("woff2"), url("fonts/Raleway-Regular.woff") format("woff");
}
@font-face {
  font-family: "Raleway";
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: local("Raleway"), url("fonts/Raleway-SemiBold.woff2") format("woff2"), url("fonts/Raleway-SemiBold.woff") format("woff");
}
.header {
  font-size: 0.66rem;
}
.header__container {
  box-sizing: content-box;
  width: 100%;
  max-height: 76px;
  height: auto;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .header__container {
    position: fixed;
    width: 90vw;
    max-height: none;
    height: 10vh;
  }
}
.header__container * {
  max-height: inherit;
}
.header__content {
  display: flex;
  height: inherit;
  flex-direction: row;
  align-items: center;
  flex-grow: 1;
}
.header__logo {
  display: inline-block;
  height: inherit;
  flex-grow: 1;
}
@media screen and (max-width: 768px) {
  .header__logo {
    flex-grow: 0;
  }
}
.header__logo-img {
  width: 3.75rem;
  height: 3.17rem;
}
@media screen and (max-width: 768px) {
  .header__logo-img {
    height: inherit;
    width: 6rem;
  }
}
.header__nav {
  flex-grow: 9;
}
@media screen and (max-width: 768px) {
  .header__nav {
    display: none;
  }
}
.header__support {
  flex-grow: 0;
}
@media screen and (max-width: 768px) {
  .header__support-list {
    display: none;
  }
}
.header__hamburger {
  display: none;
}
@media screen and (max-width: 768px) {
  .header__hamburger {
    display: block;
  }
}

.hero {
  background: linear-gradient(180deg, rgb(52, 45, 48) 0%, rgba(26, 20, 21, 0.72) 45.79%, rgb(22, 19, 19) 50.35%, rgb(8, 7, 7) 85.06%, rgba(5, 5, 5, 0.6) 100%), url(img/textures/cubes.webp);
  background-blend-mode: color-burn;
}
.hero__container {
  display: flex;
  flex-direction: column;
  padding-block: 1.3rem;
}
.hero__content {
  height: 80%;
  flex-grow: 1;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
@media screen and (max-width: 768px) {
  .hero__content {
    flex-direction: column-reverse;
    align-items: center;
  }
}
.hero__title {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}
@media screen and (max-width: 768px) {
  .hero__title {
    gap: 0.9rem;
  }
}
.hero__main {
  max-width: 30rem;
  flex-grow: 1;
  width: 50%;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  justify-content: center;
}
@media screen and (max-width: 768px) {
  .hero__main {
    flex-grow: 1;
    width: unset;
    gap: 1rem;
    justify-content: start;
  }
}
.hero__promo {
  flex-grow: 1;
  width: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .hero__promo {
    width: unset;
    height: 60vh;
  }
}
.hero__img {
  height: 100%;
}
@media screen and (max-width: 1024px) {
  .hero__img {
    height: 70vmin;
  }
}
@media screen and (max-width: 768px) {
  .hero__img {
    height: 85%;
  }
}

.action {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.action__desc {
  font-size: 1rem;
  line-height: 1.2rem;
}
.action__desc::after {
  content: "👉";
}
@media screen and (max-width: 768px) {
  .action__desc::after {
    display: block;
    content: "👇";
  }
}
@media screen and (max-width: 768px) {
  .action {
    gap: 0.3rem;
    text-align: center;
    flex-direction: column;
  }
}

.nav__menu {
  display: flex;
  flex-direction: row;
  gap: 0.6rem;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */