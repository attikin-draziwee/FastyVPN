/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}
@charset "UTF-8";
html {
  height: 100%;
}

body {
  height: 100%;
}

:root {
  font-size: 24px;
  font-weight: normal;
  font-variant-numeric: lining-nums;
  line-height: 1.4em;
  color: #fff;
  font-family: Raleway, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
@media screen and (max-width: 1024px) {
  :root {
    font-size: 21px;
  }
}
@media screen and (max-width: 820px) {
  :root {
    font-size: 3vmin;
  }
}

* {
  box-sizing: border-box;
}

button {
  font-variant-numeric: lining-nums;
  cursor: pointer;
  outline: none;
  color: inherit;
  background: none;
  border: none;
}

body {
  background-color: #181213;
}

a {
  text-decoration: none;
  color: inherit;
}

.container {
  width: max(100vw - 5rem, 90%);
  padding-block: 1.3rem;
  max-height: 100vh;
  height: 100vh;
  margin: 0 auto;
}
@media screen and (max-width: 820px) {
  .container {
    padding-block: 4rem;
  }
}
@media screen and (max-width: 480px) {
  .container {
    padding-block: 6rem;
  }
}

.logo {
  width: -moz-fit-content;
  width: fit-content;
}

.support__list {
  display: flex;
  flex-direction: column;
  gap: 8px;
}
.support__link {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.6rem;
  text-decoration: underline;
}
.support__img {
  width: 16px;
  height: 16px;
}

.heading {
  font-family: Commissioner;
  font-weight: 500;
  margin: 0;
}
.heading-one {
  font-size: 2.67rem;
}
.heading-two {
  font-size: 2rem;
  margin-bottom: 1.3rem;
  flex-grow: 0;
}
@media screen and (max-width: 820px) {
  .heading-two {
    font-size: 2.5rem;
  }
}
.heading--tg {
  font-family: Raleway;
  color: #00A9DC;
  font-weight: 600;
}

.subtitle {
  font-family: Raleway;
  font-weight: 400;
  font-size: 1.3rem;
  line-height: 1.4em;
}
.subtitle--increase {
  font-size: 1.7rem;
}
@media screen and (max-width: 820px) {
  .subtitle {
    text-align: center;
  }
}

.CTA {
  white-space: nowrap;
  text-align: center;
  display: inline-block;
  padding: 0.7em;
  background-color: #FD7655;
  border-radius: 2.5rem;
  font-size: 1.8vmax;
  font-weight: 600;
}
@media screen and (max-width: 820px) {
  .CTA {
    font-size: 1.7rem;
  }
}
.CTA--blue {
  background-color: #00A9DC;
}

.hamburger-stick__list {
  display: flex;
  flex-direction: column;
  gap: 0.5em;
}
.hamburger-stick__item {
  display: inline-block;
  width: 6vmin;
  height: 0.6vmin;
  background-color: #F0F3F6;
}

@font-face {
  font-family: "Commissioner";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: local("Commissioner"), url("fonts/Commissioner-Medium.woff2") format("woff2"), url("fonts/Commissioner-Medium.woff") format("woff");
}
@font-face {
  font-family: "Commissioner";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Commissioner"), url("fonts/Commissioner-Regular.woff2") format("woff2"), url("fonts/Commissioner-Regular.woff") format("woff");
}
@font-face {
  font-family: "Raleway";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Raleway"), url("fonts/Raleway-Bold.woff2") format("woff2"), url("fonts/Raleway-Bold.woff") format("woff");
}
@font-face {
  font-family: "Raleway";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: local("Raleway"), url("fonts/Raleway-Medium.woff2") format("woff2"), url("fonts/Raleway-Medium.woff") format("woff");
}
@font-face {
  font-family: "Raleway";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Raleway"), url("fonts/Raleway-Regular.woff2") format("woff2"), url("fonts/Raleway-Regular.woff") format("woff");
}
@font-face {
  font-family: "Raleway";
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: local("Raleway"), url("fonts/Raleway-SemiBold.woff2") format("woff2"), url("fonts/Raleway-SemiBold.woff") format("woff");
}
.about {
  overflow: hidden;
  background: linear-gradient(180deg, rgba(13, 10, 11, 0.568627451) 0%, rgba(0, 0, 0, 0.0434782) 25%, rgba(0, 0, 0, 0) 47.92%, rgba(0, 0, 0, 0.27) 75.52%, rgba(13, 10, 11, 0.8549019608) 100%), url(img/textures/cubes.webp), radial-gradient(41.66% 35.19% at 87.75% 41.91%, rgba(255, 255, 255, 0.35) 0%, rgba(255, 255, 255, 0) 100%), radial-gradient(37.26% 35.25% at 16.06% 56.76%, rgba(255, 255, 255, 0.35) 0%, rgba(255, 255, 255, 0) 100%);
  background-blend-mode: normal, color-burn;
}
.about__content {
  display: flex;
  flex-direction: column;
  height: 100%;
}
.about__list {
  flex-grow: 1;
  display: grid;
  width: 100%;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  gap: 3vmin;
}
@media screen and (max-width: 820px) {
  .about__list {
    align-items: center;
    flex-grow: 0;
    height: 100%;
    justify-content: center;
    display: flex;
    width: -moz-max-content;
    width: max-content;
  }
}
.about__item {
  cursor: pointer;
  border-radius: 0.5rem;
  display: flex;
  flex-direction: column;
  box-shadow: 0px 4px 16px 4px rgba(0, 0, 0, 0.5);
}
.about__item:nth-child(1) .about__background {
  background-image: url(img/about/bg/bg-1.webp);
}
.about__item:nth-child(2) .about__background {
  background-image: url(img/about/bg/bg-2.webp);
}
.about__item:nth-child(3) .about__background {
  background-image: url(img/about/bg/bg-3.webp);
}
.about__item:nth-child(4) .about__background {
  background-image: url(img/about/bg/bg-4.webp);
}
.about__item:nth-child(5) .about__background {
  background-image: url(img/about/bg/bg-5.webp);
}
.about__item:nth-child(6) .about__background {
  background-image: url(img/about/bg/bg-6.webp);
}
.about__item:hover:not(.about__item--active) .about__desc::before {
  opacity: 1;
}
.about__item--active .about__title {
  font-size: inherit;
  text-align: left;
  flex-grow: 0;
  font-weight: 700;
}
.about__item--active .about__text {
  display: block;
}
.about__item--active .about__desc {
  font-size: 2vmin;
  color: #181213;
  line-height: 1.4em;
  align-items: start;
  justify-content: start;
  max-height: 50%;
  padding: 0.6em;
  background: rgba(240, 243, 246, 0.8);
}
@media screen and (max-width: 1024px) {
  .about__item--active .about__desc {
    font-size: 1.75vmin;
  }
}
@media screen and (max-width: 820px) {
  .about__item--active .about__desc {
    font-size: 2.2vmax;
  }
}
.about__item--active .about__desc::before {
  content: none;
}
.about__item--active .about__background {
  max-height: 50%;
  background-position: center center;
}
.about__item--active .about__icon {
  width: 30%;
}
@media screen and (max-width: 480px) {
  .about__item--active .about__icon {
    width: 20vmax;
  }
}
@media screen and (max-width: 820px) {
  .about__item--active {
    width: 80vw;
    height: 60vh;
  }
}
.about__background, .about__title {
  display: flex;
  justify-content: center;
  align-items: center;
}
.about__background {
  background-size: cover;
  border-radius: 0.5rem 0.5rem 0 0;
  flex-grow: 1;
}
.about__icon {
  padding-block: 1rem;
  width: 40%;
  -o-object-fit: contain;
  object-fit: contain;
}
.about__desc {
  display: flex;
  flex-direction: column;
  flex-grow: 0;
  max-height: 3rem;
  height: 100%;
  border-radius: 0 0 0.5rem 0.5rem;
  background: rgba(240, 243, 246, 0.1);
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  position: relative;
}
.about__desc::before {
  transition: 0.3s ease;
  content: "";
  z-index: -1;
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, rgba(174, 100, 249, 0.8) 0%, rgba(206, 43, 43, 0.8) 100%);
  border-radius: 0 0 0.5rem 0.5rem;
  opacity: 0;
}
.about__title {
  font-size: 0.9rem;
  font-weight: 600;
  text-align: center;
  flex-grow: 1;
}
@media screen and (max-width: 820px) {
  .about__title {
    font-size: 80%;
  }
}
.about__text {
  display: none;
}

.faq {
  overflow: hidden;
  background: radial-gradient(50.85% 51.54% at 50% 50%, rgba(0, 0, 0, 0) 0%, #0d0a0b 89.06%), url(img/textures/dots.webp), #000000;
}
.faq__content {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: end;
  gap: 1rem;
}
.faq__list {
  flex-grow: 1;
  height: inherit;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.3em;
}
@media screen and (max-width: 820px) {
  .faq__list {
    grid-template-columns: 1fr;
  }
}
.faq__question, .faq__desc {
  border-radius: 0.5em;
}
.faq__question {
  cursor: pointer;
  position: relative;
  width: 100%;
  padding: 0.6em;
  background: linear-gradient(180deg, #453241 0%, #3B2935 100%);
}
.faq__answer {
  display: none;
  flex-direction: row;
  gap: 0.3em;
  line-height: 1.4em;
  align-items: end;
}
.faq__desc {
  position: relative;
  flex-grow: 1;
  padding: 0.6em;
  background: #F0F3F6;
  color: #181213;
}
.faq__avatar {
  flex-grow: 0;
  width: 3.3rem;
  border-radius: 50%;
}
.faq__item {
  display: flex;
  flex-direction: column;
  gap: 0.3em;
  position: relative;
  width: 100%;
  font-size: 2.6vmin;
  line-height: 1.4em;
}
@media screen and (max-width: 820px) {
  .faq__item {
    font-size: 2.2vmax;
  }
}
.faq__item--active .faq__answer {
  display: flex;
}
.faq__item:nth-last-child(-n+2) .faq__question::after {
  content: "";
  display: block;
  width: 1px;
  height: 1px;
  background-color: transparent;
  border: 8px solid;
  position: absolute;
  bottom: 0;
}
@media screen and (max-width: 820px) {
  .faq__item:nth-last-child(-n+2) .faq__question::after {
    content: none;
  }
}
.faq__item:last-child .faq__question::after {
  content: none;
}
.faq__item:nth-last-child(-n+2) .faq__question, .faq__item:nth-child(even) .faq__desc {
  border-radius: 0.5em 0.5em 0.5em 0;
}
@media screen and (max-width: 820px) {
  .faq__item:nth-last-child(-n+2) .faq__question, .faq__item:nth-child(even) .faq__desc {
    border-radius: 0.5em;
  }
}
.faq__item:nth-last-child(-n+2) .faq__question::after, .faq__item:nth-child(even) .faq__desc::after {
  border-color: transparent #3B2935 #3B2935 transparent;
  left: 0;
  right: unset;
  transform: translateX(-100%);
}
.faq__item:last-child .faq__question {
  border-radius: 0.5em 0.5em 0 0.5em;
}
.faq__item:last-child .faq__question::after {
  border-color: transparent transparent #3B2935 #3B2935;
  left: unset;
  right: 0;
  transform: translateX(100%);
}
@media screen and (max-width: 820px) {
  .faq__item:last-child .faq__question {
    border-radius: 0.5em;
  }
}
.faq__item:nth-child(odd) .faq__desc {
  border-radius: 0.5em 0.5em 0 0.5em;
}
.faq__item:nth-child(odd) .faq__desc::after {
  content: "";
  display: block;
  width: 1px;
  height: 1px;
  background-color: transparent;
  border: 8px solid;
  position: absolute;
  bottom: 0;
  border-color: transparent transparent #F0F3F6 #F0F3F6;
  left: unset;
  right: 0;
  transform: translateX(100%);
}
.faq__item:nth-child(even) .faq__answer {
  flex-direction: row-reverse;
}
@media screen and (max-width: 820px) {
  .faq__item:nth-child(even) .faq__answer {
    flex-direction: row;
  }
}
.faq__item:nth-child(even) .faq__desc::after {
  content: "";
  display: block;
  width: 1px;
  height: 1px;
  background-color: transparent;
  border: 8px solid;
  position: absolute;
  bottom: 0;
  border-color: transparent #F0F3F6 #F0F3F6 transparent;
  left: 0;
  right: unset;
  transform: translateX(-100%);
}
@media screen and (max-width: 820px) {
  .faq__item:nth-child(even) .faq__desc {
    border-radius: 0.5em 0.5em 0 0.5em;
  }
  .faq__item:nth-child(even) .faq__desc::after {
    border-color: transparent transparent #F0F3F6 #F0F3F6;
    left: unset;
    right: 0;
    transform: translateX(100%);
  }
}
.faq__item--active .faq__question {
  background: linear-gradient(90deg, rgba(174, 100, 249, 0.8) 0%, rgba(206, 43, 43, 0.8) 100%);
}
.faq__user {
  flex-grow: 0;
  width: -moz-fit-content;
  width: fit-content;
  border-radius: 50%;
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.35), rgba(0, 0, 0, 0.35)), linear-gradient(180deg, #5B9C3A 0%, #2D4F2B 100%);
}
@media screen and (max-width: 820px) {
  .faq__user {
    display: none;
  }
}
.faq__user-avatar {
  padding: 0.2rem;
  width: 3.3rem;
  height: 100%;
}
.faq__user-avatar--mirror {
  transform: scale(-1, 1);
}

.header {
  font-size: 0.66rem;
}
.header__container {
  box-sizing: content-box;
  width: 100%;
  max-height: 76px;
  height: auto;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
@media screen and (max-width: 820px) {
  .header__container {
    position: fixed;
    z-index: 10;
    width: 90vw;
    max-height: none;
    height: 5vh;
  }
}
@media screen and (max-width: 480px) {
  .header__container {
    height: 6vh;
  }
}
.header__container * {
  max-height: inherit;
}
.header__content {
  display: flex;
  height: inherit;
  flex-direction: row;
  align-items: center;
  flex-grow: 1;
}
.header__logo {
  display: inline-block;
  height: inherit;
  flex-grow: 1;
}
@media screen and (max-width: 820px) {
  .header__logo {
    flex-grow: 0;
  }
}
.header__logo-img {
  width: 3.75rem;
  height: 3.17rem;
}
@media screen and (max-width: 820px) {
  .header__logo-img {
    height: inherit;
  }
}
.header__nav {
  flex-grow: 9;
}
@media screen and (max-width: 820px) {
  .header__nav {
    display: none;
  }
}
.header__support {
  flex-grow: 0;
}
@media screen and (max-width: 820px) {
  .header__support-list {
    display: none;
  }
}
.header__hamburger {
  display: none;
}
@media screen and (max-width: 820px) {
  .header__hamburger {
    display: block;
  }
}

.hero {
  background: linear-gradient(180deg, rgb(52, 45, 48) 0%, rgba(26, 20, 21, 0.72) 45.79%, rgb(22, 19, 19) 50.35%, rgb(8, 7, 7) 85.06%, rgba(13, 10, 11, 0.568627451) 100%), url(img/textures/cubes.webp);
  background-blend-mode: color-burn;
}
.hero__container {
  display: flex;
  flex-direction: column;
}
@media screen and (max-width: 820px) {
  .hero__container {
    padding-block: 1.3rem;
  }
}
.hero__content {
  height: 80%;
  flex-grow: 1;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
@media screen and (max-width: 820px) {
  .hero__content {
    flex-direction: column-reverse;
    align-items: center;
  }
}
.hero__title {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}
@media screen and (max-width: 820px) {
  .hero__title {
    gap: 0.9rem;
  }
}
@media screen and (max-width: 480px) {
  .hero__subtitle {
    font-size: 2.4vmax;
  }
}
.hero__main {
  max-width: 30rem;
  flex-grow: 1;
  width: 50%;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  justify-content: center;
}
@media screen and (max-width: 820px) {
  .hero__main {
    flex-grow: 1;
    width: unset;
    gap: 1rem;
    justify-content: start;
  }
}
.hero__promo {
  flex-grow: 1;
  width: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}
@media screen and (max-width: 820px) {
  .hero__promo {
    width: unset;
    height: 60vh;
  }
}
.hero__img {
  height: 100%;
}
@media screen and (max-width: 1024px) {
  .hero__img {
    height: 70vmin;
  }
}
@media screen and (max-width: 820px) {
  .hero__img {
    height: 85%;
  }
}
.hero__CTA {
  white-space: nowrap;
}
@media screen and (max-width: 820px) {
  .hero__CTA {
    white-space: normal;
    font-size: 2.2vmax;
  }
}

.action {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.action__desc {
  font-size: 1rem;
  line-height: 1.2em;
}
@media screen and (max-width: 820px) {
  .action__desc {
    font-size: 2.2vmax;
  }
}
.action__desc::after {
  content: "👉";
}
@media screen and (max-width: 820px) {
  .action__desc::after {
    display: block;
    content: "👇";
  }
}
@media screen and (max-width: 820px) {
  .action {
    gap: 0.3rem;
    text-align: center;
    flex-direction: column;
  }
}

.how {
  overflow: hidden;
  background: linear-gradient(0deg, rgba(13, 10, 11, 0.7529411765) 100%, rgba(0, 0, 0, 0.856287) 7.44%, rgba(0, 0, 0, 0.709913) 11.41%, rgba(0, 0, 0, 0) 19.48%), linear-gradient(180deg, #181213 0%, rgba(24, 18, 19, 0) 14.14%), linear-gradient(180deg, rgba(13, 10, 11, 0) 40%, #0d0a0b 100%), url(img/textures/tg_pattern.webp);
  position: relative;
}
.how__container {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.how__content, .how__promo, .how__messages {
  flex-grow: 1;
}
.how__content {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
}
@media screen and (max-width: 820px) {
  .how__content {
    flex-direction: column-reverse;
    justify-content: space-between;
  }
}
.how__promo, .how__messages {
  width: 50%;
}
@media screen and (max-width: 820px) {
  .how__promo, .how__messages {
    width: 100%;
  }
}
.how__promo-content {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 40vw;
}
.how__img {
  width: inherit;
  position: relative;
}
@media screen and (max-width: 820px) {
  .how__img {
    left: 50%;
    bottom: 0;
    transform: translate(-25%, 20%);
  }
}
.how__video {
  position: absolute;
  left: 50%;
  top: 1.75%;
  width: 14vw;
  border-radius: 2vw;
}
@media screen and (max-width: 820px) {
  .how__video {
    width: 35vw;
    left: 81%;
    bottom: 0%;
    transform: translateY(21%);
    border-radius: 5vw;
  }
}

.message {
  font-size: 1.2vmax;
}
@media screen and (max-width: 820px) {
  .message {
    font-size: 2vmax;
    height: 100%;
  }
}
.message__list {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
  height: inherit;
}
.message__item {
  position: relative;
  line-height: 1.4em;
  padding: 0.6rem;
  background: linear-gradient(180deg, #453241 0%, #3B2935 100%);
  border-radius: 0.5em;
}
.message__item--link {
  text-decoration: underline;
  color: #00A9DC;
}
.message__item:last-child {
  border-radius: 0.5rem 0.5rem 0.5rem 0;
}
.message__item:last-child::after {
  content: "";
  display: block;
  width: 1px;
  height: 1px;
  background-color: transparent;
  border: 8px solid;
  border-color: transparent #3B2935 #3B2935 transparent;
  position: absolute;
  left: 0;
  transform: translateX(-100%);
  bottom: 0;
}
.message__button {
  padding: 0;
  background: linear-gradient(90deg, rgba(174, 100, 249, 0.8) 0%, rgba(206, 43, 43, 0.8) 100%);
}
.message__button > button {
  padding: 0.6rem;
  font-weight: 600;
  font-size: 2vmax;
  width: 100%;
  height: 100%;
}
@media screen and (max-width: 480px) {
  .message__button > button {
    font-size: 2.5vmax;
  }
}

.nav__menu {
  display: flex;
  flex-direction: row;
  gap: 0.6rem;
}

.price {
  background: linear-gradient(180deg, #0d0a0b 0%, rgba(13, 10, 11, 0.6862745098) 25%), linear-gradient(180deg, rgba(13, 10, 11, 0.5568627451) 65%, #0d0a0b 100%), url(img/textures/abstract.webp) no-repeat;
  background-size: cover;
  background-blend-mode: normal, normal, color-burn;
}
.price__container {
  display: flex;
  flex-direction: column;
}
.price__heading {
  flex-grow: 0;
  margin-bottom: 1.3rem;
}
.price__content {
  flex-grow: 1;
  display: flex;
  align-items: start;
  width: 100%;
}
.price__list {
  justify-content: stretch;
  align-items: start;
  width: inherit;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr;
  gap: 1.3rem;
}
@media screen and (max-width: 820px) {
  .price__list {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr 1fr;
  }
}
.price__item, .price__header {
  display: flex;
  flex-direction: column;
}
.price__item {
  height: 100%;
  width: 100%;
  gap: 1rem;
  justify-content: space-between;
  align-items: center;
}
@media screen and (max-width: 820px) {
  .price__item {
    align-items: stretch;
  }
}
.price__item:nth-child(1) .price__img {
  background: url(img/prices/standart_bg.webp);
  background-size: cover;
}
.price__item:nth-child(2) .price__img {
  background: url(img/prices/free_bg.webp);
  background-size: cover;
}
.price__item:nth-child(3) .price__img {
  background: url(img/prices/premium_bg.webp);
  background-size: cover;
}
@media screen and (max-width: 820px) {
  .price__item {
    flex-direction: row;
  }
}
.price__header {
  flex-grow: 0;
  width: 100%;
  box-shadow: 0px 4px 16px 4px rgba(0, 0, 0, 0.15);
}
.price__img {
  flex-grow: 1;
  border-radius: 0.5em 0.5em 0 0;
  width: auto;
  display: flex;
  justify-content: center;
  align-items: center;
}
@media screen and (max-width: 480px) {
  .price__img {
    height: 50%;
  }
}
.price__icon {
  text-align: center;
  height: 30vmin;
  padding: 1.9rem;
}
@media screen and (max-width: 820px) {
  .price__icon {
    height: 20vmin;
    padding: 1rem;
  }
}
.price__title {
  text-align: center;
  display: block;
  background: linear-gradient(90deg, rgba(174, 100, 249, 0.8) 0%, rgba(206, 43, 43, 0.8) 100%);
  border-radius: 0 0 0.5em 0.5em;
  font-family: "Commissioner";
  font-size: 1.6vmax;
  font-weight: 500;
  line-height: 1.4em;
  padding: 1em 2em;
}
.price__title--premium {
  padding: 1em 1em;
  background: linear-gradient(90deg, #D56718 -0.03%, #EAB667 99.97%);
}
@media screen and (max-width: 820px) {
  .price__title {
    font-size: 2vmax;
  }
}
@media screen and (max-width: 480px) {
  .price__title {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 50%;
    padding: 0;
    font-size: 2.6vmax;
  }
}
.price__comparison {
  width: 100%;
  padding: 0.6rem;
}
@media screen and (max-width: 820px) {
  .price__CTA {
    font-size: 2vmax;
    padding: 0.6em 0.9em;
    white-space: normal;
  }
}
.price__footer {
  flex-grow: 1;
  width: 100%;
  display: flex;
  gap: 1rem;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
@media screen and (max-width: 820px) {
  .price__footer {
    min-height: 100%;
  }
}

.comparison {
  flex-grow: 1;
  background: rgba(240, 243, 246, 0.1);
  box-shadow: 0px 4px 16px 4px rgba(0, 0, 0, 0.15);
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  border-radius: 12px;
}
.comparison__list {
  list-style: disc;
  list-style-position: inside;
  font-style: normal;
  font-weight: 400;
  font-size: 1.2vmax;
  line-height: 1.4em;
}
.comparison__list--premium {
  list-style: none;
  font-weight: 500;
}
@media screen and (max-width: 820px) {
  .comparison__list {
    font-size: 2.4vmin;
  }
}
@media screen and (max-width: 480px) {
  .comparison__list {
    font-size: 3.6vmin;
  }
}
.comparison--premium {
  background: linear-gradient(90deg, #D56718 -0.03%, #EAB667 99.97%);
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */